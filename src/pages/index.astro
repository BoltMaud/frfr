---
import ImageMod from "@/components/ImageMod.astro";
import Base from "@/layouts/Base.astro";
import { markdownify } from "@/lib/utils/textConverter";
import AuthorCard from "@/components/AuthorCard.astro";
import Testimonial from "@/partials/Companies.astro";
import Typeofcontact from "@/partials/TypeOfContact.astro";
import Pourquoi from "@/partials/Pourquoi.astro";
import type { Button, Feature } from "@/types";
import { getEntry } from "astro:content";
import { FaCheck } from "react-icons/fa";
import "@fontsource/twinkle-star";
import { getSinglePage } from "@/lib/contentParser.astro";
import Companies from "@/partials/Companies.astro";


interface Homepage {
  features: Feature[];
}

const homepage = await getEntry("homepage", "-index");
const companies = await getEntry("sections", "companies");
const typeofcontact = await getEntry("sections", "typeofcontact");
const pourquoi = await getEntry("sections", "pourquoi");
const call_to_action = await getEntry("sections", "call-to-action");
const COLLECTION_FOLDER = "steps";

const authorIndex = await getEntry(COLLECTION_FOLDER, "-index");
const authors = await getSinglePage(COLLECTION_FOLDER);
const { features }: Homepage = homepage.data;
---

<Base>

  <!-- Features -->
  {
    features.map((feature, index: number) => (
      <section class={`section-sm ${index % 2 === 1 && "bg-gradient"}`}>
        <div class="container">
          <div class="row items-center justify-between">
            <div
              class={`mb:md-0 mb-6 md:col-5 ${index % 2 !== 0 && "md:order-2"}`}
            >
              <ImageMod
                src={feature.image}
                height={512}
                width={512}
                alt={feature.title}
                format="webp"
              />
            </div>
            <div class={`md:col-7 lg:col-6 ${index % 2 !== 0 && "md:order-1"}`}>
              <h2 set:html={markdownify(feature.title)} class="mb-4" />
              <p set:html={markdownify(feature.content)} class="mb-8 text-lg" />
              <ul>
                {feature.bulletpoints.map((bullet: string) => (
                  <li class="relative mb-4 pl-6">
                    <FaCheck className={"absolute left-0 top-1.5"} />
                    <span set:html={markdownify(bullet)} />
                  </li>
                ))}
              </ul>
              {feature.button && (
                <a class="btn btn-primary mt-5" href={feature.button.link}>
                  {feature.button.label}
                </a>
              )}
            </div>
          </div>
        </div>
      </section>
    ))
  }
  <!-- /Features -->
  
  <section id="realisations" class="section-sm pb-0">
    <div class="container bg-secondary">
      <div class="row justify-center">
        <h2  set:html={markdownify(authorIndex.data.title)} class="text-center" />

        {
          authors.map((author) => (
            <div class="mb-14 md:col-6 lg:col-4">
              <AuthorCard data={author} />
            </div>
          ))
        }
      </div>
    </div>
  </section>  
  <Pourquoi pourquoi={pourquoi}/>
</Base>
